# Generated by Django 5.0.6 on 2024-05-19 18:03

import django.db.models.deletion
import traveler.helps
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_city_media)),
                ('number_views', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.city')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('reads_number', models.PositiveIntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
                'indexes': [models.Index(fields=['id'], name='traveler_co_id_d276ac_idx')],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.country'),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_gallery_media)),
                ('looking_numbers', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
                'indexes': [models.Index(fields=['id'], name='traveler_ga_id_0b8279_idx')],
            },
        ),
        migrations.CreateModel(
            name='Hotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('rating', models.FloatField()),
                ('brand_image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_hotel_brand)),
                ('price', models.FloatField()),
                ('price_type', models.CharField(choices=[('$', '$'), ('rubl', 'rubl'), ('sum', 'sum')], default='$', max_length=20)),
                ('service_term', models.IntegerField(default=1)),
                ('discount', models.FloatField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('images', models.ManyToManyField(blank=True, related_name='hotels_gallery', to='traveler.gallery')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='PlaceCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('looking_count', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
                'indexes': [models.Index(fields=['id'], name='traveler_pl_id_014bff_idx')],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('status', models.CharField(choices=[('Translator', 'Translator'), ('Manager', 'Manager'), ('Pilot', 'Pilot'), ('Accountant', 'Accountant'), ('Pioneer', 'Pioneer'), ('Other', 'Other')], default='Other', max_length=20)),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_employe_image)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_place_image)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.address')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.placecategories')),
                ('hotels', models.ManyToManyField(blank=True, related_name='places_hotels', to='traveler.hotels')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.team')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TravelCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_tour_category_media)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.team')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Travels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_day', models.DateTimeField(auto_created=True)),
                ('departure_date', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('persons', models.IntegerField(default=0)),
                ('price', models.FloatField()),
                ('price_type', models.CharField(choices=[('$', '$'), ('rubl', 'rubl'), ('sum', 'sum')], default='$', max_length=20)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_travel_media)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('discounts', models.FloatField(default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.team')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.travelcategory')),
                ('comments', models.ManyToManyField(blank=True, related_name='comments', to='traveler.comments')),
                ('places', models.ManyToManyField(related_name='places', to='traveler.places')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BookNow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('persons', models.PositiveIntegerField(default=1)),
                ('total_price', models.FloatField()),
                ('price_type', models.CharField(choices=[('$', '$'), ('rubl', 'rubl'), ('sum', 'sum')], default='$', max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('travel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='traveler.travels')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('text', models.TextField()),
                ('image', models.ImageField(upload_to=traveler.helps.SaveMediafile.save_about_us_media)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('hotels', models.ManyToManyField(related_name='hotels', to='traveler.hotels')),
                ('travels', models.ManyToManyField(related_name='travels', to='traveler.travels')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.AddIndex(
            model_name='address',
            index=models.Index(fields=['id'], name='traveler_ad_id_e53cc9_idx'),
        ),
        migrations.AddIndex(
            model_name='comments',
            index=models.Index(fields=['id'], name='traveler_co_id_244adf_idx'),
        ),
        migrations.AddIndex(
            model_name='city',
            index=models.Index(fields=['id'], name='traveler_ci_id_abbe47_idx'),
        ),
        migrations.AddIndex(
            model_name='hotels',
            index=models.Index(fields=['id'], name='traveler_ho_id_40aac9_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['id'], name='traveler_te_id_f9aab7_idx'),
        ),
        migrations.AddIndex(
            model_name='places',
            index=models.Index(fields=['id'], name='traveler_pl_id_fad999_idx'),
        ),
        migrations.AddIndex(
            model_name='travelcategory',
            index=models.Index(fields=['id'], name='traveler_tr_id_9d6cf6_idx'),
        ),
        migrations.AddIndex(
            model_name='travels',
            index=models.Index(fields=['id'], name='traveler_tr_id_b17640_idx'),
        ),
        migrations.AddIndex(
            model_name='booknow',
            index=models.Index(fields=['id'], name='traveler_bo_id_c35ab4_idx'),
        ),
        migrations.AddIndex(
            model_name='aboutus',
            index=models.Index(fields=['id'], name='traveler_ab_id_fe612e_idx'),
        ),
    ]
